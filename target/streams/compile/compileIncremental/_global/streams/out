[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Distances.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/MapMatcherOld.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Grid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineString.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/SpatialClasses.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Graph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RStarTree.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RStarTreeTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Line.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Shape.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/Util.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Point.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/spark/spark-map-matching/src/main/scala/geometry/Point.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Line.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /home/spark/spark-map-matching/src/main/scala/graph/Util.scala, /home/spark/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/od/runODQuery.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RStarTree.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Graph.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/testRangeQuery2.scala, /home/spark/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /home/spark/spark-map-matching/src/main/scala/speed/gpsSpeed.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /home/spark/spark-map-matching/src/main/scala/speed/runSpeedQuery-Old.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Grid.scala, /home/spark/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /home/spark/spark-map-matching/src/main/scala/geometry/LineString.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Shape.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Distances.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /home/spark/spark-map-matching/src/main/scala/speed/runSpeedQuery.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/SpatialClasses.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /home/spark/spark-map-matching/src/main/scala/od/odQuery.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /home/spark/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/MapMatcherOld.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RStarTreeTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Shape.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/runRangeQuery$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/Util$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadVertex.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Line.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/RunMapMatching$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMap$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid$GridId.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTest$delayedInit$body.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGraph$RouteGraph.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/rangequery/keyPartitioner$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/DijkstraPriorityMapTest$delayedInit$body.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/LineString$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/StandardPriorityMap.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/LineStringTest.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/LineStringTest$delayedInit$body.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadVertex$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGrid.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/STRPartition/STRTest$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMapFactory.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMapLike.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/runRangeQuery.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGrid$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Point$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/preprocessingTest.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/MapMatcher$$anonfun$connectRoads$5.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/STRPartitioner/STRPartitioner$$typecreator1$1.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/DijkstraPriorityMapTest$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Distances.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGraph$RouteGraph$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/testRangeQuery.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/MapMatcher.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/RTree/RTree$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/preprocessingTest$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/STRPartitioner/STRPartitioner.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/LineStringTest$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/rangequery/keyPartitioner.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/RunMapMatching$$typecreator5$1.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/MapMatcher$$anonfun$1.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/DijkstraPriorityMapTest.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadEdge$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/Util.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGraph$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Point.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/RTree/Node$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra$DijkstraOps.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Graph$$anonfun$$minus$2.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/RTree/RTree.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/STRPartition/STRPartitioner$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Trajectory$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid$GridId$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid$GridBoundary$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Graph.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/preprocessingTest$delayedInit$body.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/DijkstraPriorityMap$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Rectangle.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/MapMatcher$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTest.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Rectangle$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Graph$$anonfun$$minus$4.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/STRPartition/STRTest.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra$DijkstraOps$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/RunMapMatching.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/STRPartitioner/STRPartitioner$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/STRPartition/STRPartitioner.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra$syntax$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/mmTrajectory$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/DijkstraPriorityMap.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGraph.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTestWithTraj$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/StandardPriorityMap$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMap.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Line$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Distances$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/SimpleGraph$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Grid$GridBoundary.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/preprocessing$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/testRangeQuery$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/mmTrajectory.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/rangequery/rangeQuery$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/LineString.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMapBuilder.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Dijkstra$Syntax.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTest$.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadEdge.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/RTree/Node.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTestWithTraj.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMap$WithDefault.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMapFactory$PriorityMapCanBuildFrom.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMapLike$$anon$1.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/rangequery/rangeQuery.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/geometry/Trajectory.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/mapmatching/preprocessing.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/prioritymap/PriorityMap$Default.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/STRPartition/STRPartitioner$$typecreator1$1.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/SimpleGraph.class, /Users/kaiqi.liu/spark-map-matching/target/scala-2.12/classes/main/scala/graph/RoadGridTestWithTraj$delayedInit$body.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/tukaani/xz/1.5/xz-1.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet-core/2.30/jersey-container-servlet-core-2.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-jackson_2.12/3.6.6/json4s-jackson_2.12-3.6.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-client/2.30/jersey-client-2.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/flatbuffers/flatbuffers-java/1.9.0/flatbuffers-java-1.9.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.4/hadoop-mapreduce-client-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/oro/oro/2.0.8/oro-2.0.8.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/3.0.0/spark-core_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.6/json4s-scalap_2.12-3.6.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jline/jline/0.9.94/jline-0.9.94.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-client/2.7.4/hadoop-yarn-client-2.7.4.jar, /home/spark/.sbt/boot/scala-2.12.10/lib/scala-reflect.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.4/hadoop-mapreduce-client-app-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/net/sf/py4j/py4j/0.10.9/py4j-0.10.9.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/flatbuffers/flatbuffers-java/1.9.0/flatbuffers-java-1.9.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-annotations/2.7.4/hadoop-annotations-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-hdfs/2.7.4/hadoop-hdfs-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-client/2.7.4/hadoop-yarn-client-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.7.1/lz4-java-1.7.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-vector/0.15.1/arrow-vector-0.15.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-client/2.7.4/hadoop-client-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sketch_2.12/3.0.0/spark-sketch_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/clearspring/analytics/stream/2.9.6/stream-2.9.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/media/jersey-media-jaxb/2.30/jersey-media-jaxb-2.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-server/2.30/jersey-server-2.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.6/json4s-ast_2.12-3.6.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-auth/2.7.4/hadoop-auth-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sql_2.12/3.0.0/spark-sql_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/3.0.0/spark-core_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.6/json4s-core_2.12-3.6.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill_2.12/0.9.5/chill_2.12-0.9.5.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-tags_2.12/3.0.0/spark-tags_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/inject/guice/3.0/guice-3.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.10.0/jackson-module-scala_2.12-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/janino/3.0.16/janino-3.0.16.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-mapreduce/1.5.10/orc-mapreduce-1.5.10.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-nodemanager/2.7.4/hadoop-yarn-server-nodemanager-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-hadoop/1.10.1/parquet-hadoop-1.10.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-kvstore_2.12/3.0.0/spark-kvstore_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-memory/0.15.1/arrow-memory-0.15.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/kryo-shaded/4.0.2/kryo-shaded-4.0.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/activation/activation/1.1.1/activation-1.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-common_2.12/3.0.0/spark-network-common_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.7.5/snappy-java-1.1.7.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/activation/activation/1.1.1/activation-1.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-ipc/1.8.2/avro-ipc-1.8.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-jackson_2.12/3.6.6/json4s-jackson_2.12-3.6.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-format/2.4.0/parquet-format-2.4.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-graphite/4.1.1/metrics-graphite-4.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-mapred/1.8.2/avro-mapred-1.8.2-hadoop2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro/1.8.2/avro-1.8.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-jackson/1.10.1/parquet-jackson-1.10.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-api/2.7.4/hadoop-yarn-api-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-core/4.1.1/metrics-core-4.1.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-hadoop/1.10.1/parquet-hadoop-1.10.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/threeten/threeten-extra/1.5.0/threeten-extra-1.5.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-vector/0.15.1/arrow-vector-0.15.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-nodemanager/2.7.4/hadoop-yarn-server-nodemanager-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-core/1.5.10/orc-core-1.5.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/airlift/aircompressor/0.10/aircompressor-0.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.4/hadoop-mapreduce-client-core-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sketch_2.12/3.0.0/spark-sketch_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hive/hive-storage-api/2.7.1/hive-storage-api-2.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-annotations/2.7.4/hadoop-annotations-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-jackson/1.10.1/parquet-jackson-1.10.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jvm/4.1.1/metrics-jvm-4.1.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-memory/0.15.1/arrow-memory-0.15.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-shims/1.5.10/orc-shims-1.5.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-client/2.7.4/hadoop-client-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jmx/4.1.1/metrics-jmx-4.1.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.7.5/snappy-java-1.1.7.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jmx/4.1.1/metrics-jmx-4.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.7.1/lz4-java-1.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-format/0.15.1/arrow-format-0.15.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.4/hadoop-mapreduce-client-jobclient-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.6/commons-text-1.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet/2.30/jersey-container-servlet-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-graphite/4.1.1/metrics-graphite-4.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-common/2.30/jersey-common-2.30.jar, /home/spark/.sbt/boot/scala-2.12.10/lib/scala-library.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.4.4-3/zstd-jni-1.4.4-3.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-common/2.7.4/hadoop-yarn-server-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/xbean/xbean-asm7-shaded/4.15/xbean-asm7-shaded-4.15.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sql_2.12/3.0.0/spark-sql_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-net/commons-net/3.1/commons-net-3.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-mapred/1.8.2/avro-mapred-1.8.2-hadoop2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-launcher_2.12/3.0.0/spark-launcher_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-net/commons-net/3.1/commons-net-3.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/16.0.1/guava-16.0.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.4/hadoop-mapreduce-client-app-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/shims/0.7.45/shims-0.7.45.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.4/hadoop-mapreduce-client-shuffle-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-format/2.4.0/parquet-format-2.4.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.4.4-3/zstd-jni-1.4.4-3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-auth/2.7.4/hadoop-auth-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-ipc/1.8.2/avro-ipc-1.8.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.4/hadoop-mapreduce-client-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-unsafe_2.12/3.0.0/spark-unsafe_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/oro/oro/2.0.8/oro-2.0.8.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.10.0/jackson-module-paranamer-2.10.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-common/2.30/jersey-common-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/janino/3.0.16/janino-3.0.16.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/commons-compiler/3.0.16/commons-compiler-3.0.16.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-encoding/1.10.1/parquet-encoding-1.10.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/clearspring/analytics/stream/2.9.6/stream-2.9.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-shuffle_2.12/3.0.0/spark-network-shuffle_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-io/commons-io/2.4/commons-io-2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-common/2.7.4/hadoop-yarn-server-common-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-common/1.10.1/parquet-common-1.10.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.10.0/jackson-module-paranamer-2.10.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-xc/1.9.13/jackson-xc-1.9.13.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalacheck/scalacheck_2.12/1.14.1/scalacheck_2.12-1.14.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-json/4.1.1/metrics-json-4.1.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/univocity/univocity-parsers/2.8.3/univocity-parsers-2.8.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-crypto/1.0.0/commons-crypto-1.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/google/inject/guice/3.0/guice-3.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-client/2.30/jersey-client-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.10.0/jackson-module-scala_2.12-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-catalyst_2.12/3.0.0/spark-catalyst_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hive/hive-storage-api/2.7.1/hive-storage-api-2.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-common/2.7.4/hadoop-yarn-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-common/2.7.4/hadoop-yarn-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/RoaringBitmap/0.7.45/RoaringBitmap-0.7.45.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/inject/jersey-hk2/2.30/jersey-hk2-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalacheck/scalacheck_2.12/1.14.1/scalacheck_2.12-1.14.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/kryo-shaded/4.0.2/kryo-shaded-4.0.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/2.7.4/hadoop-common-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-digester/commons-digester/1.8/commons-digester-1.8.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jvm/4.1.1/metrics-jvm-4.1.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-digester/commons-digester/1.8/commons-digester-1.8.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-core/1.5.10/orc-core-1.5.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-tags_2.12/3.0.0/spark-tags_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-framework/2.7.1/curator-framework-2.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-shims/1.5.10/orc-shims-1.5.10.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-client/2.7.1/curator-client-2.7.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill-java/0.9.5/chill-java-0.9.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-encoding/1.10.1/parquet-encoding-1.10.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/inject/jersey-hk2/2.30/jersey-hk2-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jline/jline/0.9.94/jline-0.9.94.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.4/hadoop-mapreduce-client-jobclient-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/2.7.4/hadoop-common-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.6/json4s-core_2.12-3.6.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill-java/0.9.5/chill-java-0.9.5.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/threeten/threeten-extra/1.5.0/threeten-extra-1.5.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.6/json4s-scalap_2.12-3.6.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-all/4.1.47.Final/netty-all-4.1.47.Final.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-io/commons-io/2.4/commons-io-2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/net/sf/py4j/py4j/0.10.9/py4j-0.10.9.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-client/2.7.1/curator-client-2.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.6/commons-text-1.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-framework/2.7.1/curator-framework-2.7.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-server/2.30/jersey-server-2.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.4/hadoop-mapreduce-client-core-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill_2.12/0.9.5/chill_2.12-0.9.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/media/jersey-media-jaxb/2.30/jersey-media-jaxb-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-common/1.10.1/parquet-common-1.10.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-json/4.1.1/metrics-json-4.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/xbean/xbean-asm7-shaded/4.15/xbean-asm7-shaded-4.15.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/shims/0.7.45/shims-0.7.45.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-hdfs/2.7.4/hadoop-hdfs-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-api/2.7.4/hadoop-yarn-api-2.7.4.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-kvstore_2.12/3.0.0/spark-kvstore_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-xc/1.9.13/jackson-xc-1.9.13.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar, /Users/kaiqi.liu/.sbt/boot/scala-2.12.10/lib/scala-reflect.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-catalyst_2.12/3.0.0/spark-catalyst_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-column/1.10.1/parquet-column-1.10.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/tukaani/xz/1.5/xz-1.5.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet/2.30/jersey-container-servlet-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/commons-compiler/3.0.16/commons-compiler-3.0.16.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/net/razorvine/pyrolite/4.30/pyrolite-4.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/univocity/univocity-parsers/2.8.3/univocity-parsers-2.8.3.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-format/0.15.1/arrow-format-0.15.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-mapreduce/1.5.10/orc-mapreduce-1.5.10.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-all/4.1.47.Final/netty-all-4.1.47.Final.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.6/json4s-ast_2.12-3.6.6.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-unsafe_2.12/3.0.0/spark-unsafe_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/net/razorvine/pyrolite/4.30/pyrolite-4.30.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-launcher_2.12/3.0.0/spark-launcher_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet-core/2.30/jersey-container-servlet-core-2.30.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/airlift/aircompressor/0.10/aircompressor-0.10.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-shuffle_2.12/3.0.0/spark-network-shuffle_2.12-3.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro/1.8.2/avro-1.8.2.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.4/hadoop-mapreduce-client-shuffle-2.7.4.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-core/4.1.1/metrics-core-4.1.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-column/1.10.1/parquet-column-1.10.1.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-common_2.12/3.0.0/spark-network-common_2.12-3.0.0.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/RoaringBitmap/0.7.45/RoaringBitmap-0.7.45.jar, /Users/kaiqi.liu/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar, /Users/kaiqi.liu/.sbt/boot/scala-2.12.10/lib/scala-library.jar, /home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-crypto/1.0.0/commons-crypto-1.0.0.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(main.scala.geometry.Dijkstra.DijkstraOps, main.scala.RTree.Node, main.scala.RTree.RTree, main.scala.geometry.Shape, main.scala.geometry.Line, main.scala.graph.Util, main.scala.geometry.Dijkstra.Syntax, main.scala.prioritymap.PriorityMapFactory, main.scala.geometry.DijkstraPriorityMapTest, main.scala.geometry.DijkstraPriorityMap, main.scala.graph.RoadGridTestWithTraj, main.scala.geometry.Trajectory, main.scala.geometry.mmTrajectory, runRangeQuery, STRPartition.STRTest, main.scala.graph.RoadVertex, main.scala.graph.RoadEdge, main.scala.graph.RoadGraph, main.scala.geometry.Grid.GridId, main.scala.rangequery.keyPartitioner, main.scala.prioritymap.PriorityMapBuilder, STRPartition.STRPartitioner, main.scala.geometry.LineString, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMapLike, main.scala.prioritymap.StandardPriorityMap, main.scala.graph.SimpleGraph, main.scala.graph.RoadGridTest, main.scala.geometry.Grid.GridBoundary, RunMapMatching, main.scala.geometry.Distances, main.scala.graph.RoadGraph.RouteGraph, main.scala.mapmatching.MapMatcher, main.scala.mapmatching.preprocessing, main.scala.prioritymap.PriorityMap, main.scala.geometry.LineStringTest, main.scala.geometry.Grid, main.scala.geometry.Point, main.scala.prioritymap.PriorityMap.Default, main.scala.graph.RoadGrid, testRangeQuery, main.scala.geometry.Graph, main.scala.geometry.Dijkstra.syntax, main.scala.geometry.Rectangle, main.scala.STRPartitioner.STRPartitioner, main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom, main.scala.geometry.Dijkstra, main.scala.mapmatching.preprocessingTest, main.scala.rangequery.rangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Distances.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Grid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineString.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Graph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Line.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Shape.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/Util.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Point.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Distances.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Grid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineString.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Graph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Line.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Shape.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/Util.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Point.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(main.scala.geometry.Dijkstra.DijkstraOps, main.scala.RTree.Node, main.scala.RTree.RTree, main.scala.geometry.Shape, main.scala.geometry.Line, main.scala.graph.Util, main.scala.geometry.Dijkstra.Syntax, main.scala.prioritymap.PriorityMapFactory, main.scala.geometry.DijkstraPriorityMapTest, main.scala.geometry.DijkstraPriorityMap, main.scala.graph.RoadGridTestWithTraj, main.scala.geometry.Trajectory, main.scala.geometry.mmTrajectory, runRangeQuery, STRPartition.STRTest, main.scala.graph.RoadVertex, main.scala.graph.RoadEdge, main.scala.graph.RoadGraph, main.scala.geometry.Grid.GridId, main.scala.rangequery.keyPartitioner, main.scala.prioritymap.PriorityMapBuilder, STRPartition.STRPartitioner, main.scala.geometry.LineString, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMapLike, main.scala.prioritymap.StandardPriorityMap, main.scala.graph.SimpleGraph, main.scala.graph.RoadGridTest, main.scala.geometry.Grid.GridBoundary, RunMapMatching, main.scala.geometry.Distances, main.scala.graph.RoadGraph.RouteGraph, main.scala.mapmatching.MapMatcher, main.scala.mapmatching.preprocessing, main.scala.prioritymap.PriorityMap, main.scala.geometry.LineStringTest, main.scala.geometry.Grid, main.scala.geometry.Point, main.scala.prioritymap.PriorityMap.Default, main.scala.graph.RoadGrid, testRangeQuery, main.scala.geometry.Graph, main.scala.geometry.Dijkstra.syntax, main.scala.geometry.Rectangle, main.scala.STRPartitioner.STRPartitioner, main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom, main.scala.geometry.Dijkstra, main.scala.mapmatching.preprocessingTest, main.scala.rangequery.rangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/spark/spark-map-matching/src/main/scala/geometry/Point.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Line.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Distances.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /home/spark/spark-map-matching/src/main/scala/graph/Util.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Grid.scala, /home/spark/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineString.scala, /home/spark/spark-map-matching/src/main/scala/od/runODQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RStarTree.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGridTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Graph.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Trajectory.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/testRangeQuery2.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Graph.scala, /home/spark/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /home/spark/spark-map-matching/src/main/scala/speed/gpsSpeed.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/runRangeQuery.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/StandardPriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGraph.scala, /home/spark/spark-map-matching/src/main/scala/speed/runSpeedQuery-Old.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Grid.scala, /home/spark/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/geometry/LineString.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Shape.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGridTestWithTraj.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMap.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Distances.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/STRPartitioner.scala, /home/spark/spark-map-matching/src/main/scala/speed/runSpeedQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapBuilder.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Line.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/SpatialClasses.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/mapmatching/RunMapMatching.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMapFactory.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Shape.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/testRangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/Util.scala, /home/spark/spark-map-matching/src/main/scala/od/odQuery.scala, /home/spark/spark-map-matching/src/main/scala/graph/RoadEdge.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/STRPartitioner.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadVertex.scala, /home/spark/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/MapMatcher.scala, /home/spark/spark-map-matching/src/main/scala/RTree/RStarTree.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/preprocessing.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/MapMatcherOld.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/LineStringTest.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Point.scala, /home/spark/spark-map-matching/src/main/scala/geometry/Rectangle.scala, /home/spark/spark-map-matching/src/main/scala/prioritymap/PriorityMap.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/graph/RoadGrid.scala, /home/spark/spark-map-matching/src/main/scala/graph/SimpleGraph.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/prioritymap/PriorityMapLike.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/rangequery/rangeQuery.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/Dijkstra.scala, /Users/kaiqi.liu/spark-map-matching/src/main/scala/geometry/DijkstraPriorityMapTest.scala, /home/spark/spark-map-matching/src/main/scala/mapmatching/RStarTreeTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Dijkstra.DijkstraOps, main.scala.RTree.Node, main.scala.RTree.RTree, main.scala.geometry.Shape, main.scala.geometry.Line, main.scala.graph.Util, main.scala.geometry.Dijkstra.Syntax, main.scala.prioritymap.PriorityMapFactory, main.scala.geometry.DijkstraPriorityMapTest, main.scala.geometry.DijkstraPriorityMap, main.scala.graph.RoadGridTestWithTraj, main.scala.geometry.Trajectory, main.scala.geometry.mmTrajectory, runRangeQuery, STRPartition.STRTest, main.scala.graph.RoadVertex, main.scala.graph.RoadEdge, main.scala.graph.RoadGraph, main.scala.geometry.Grid.GridId, main.scala.rangequery.keyPartitioner, main.scala.prioritymap.PriorityMapBuilder, STRPartition.STRPartitioner, main.scala.geometry.LineString, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMapLike, main.scala.prioritymap.StandardPriorityMap, main.scala.graph.SimpleGraph, main.scala.graph.RoadGridTest, main.scala.geometry.Grid.GridBoundary, RunMapMatching, main.scala.geometry.Distances, main.scala.graph.RoadGraph.RouteGraph, main.scala.mapmatching.MapMatcher, main.scala.mapmatching.preprocessing, main.scala.prioritymap.PriorityMap, main.scala.geometry.LineStringTest, main.scala.geometry.Grid, main.scala.geometry.Point, main.scala.prioritymap.PriorityMap.Default, main.scala.graph.RoadGrid, testRangeQuery, main.scala.geometry.Graph, main.scala.geometry.Dijkstra.syntax, main.scala.geometry.Rectangle, main.scala.STRPartitioner.STRPartitioner, main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom, main.scala.geometry.Dijkstra, main.scala.mapmatching.preprocessingTest, main.scala.rangequery.rangeQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Point by main.scala.geometry.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Rectangle by main.scala.geometry.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Dijkstra.syntax by main.scala.geometry.Dijkstra.Syntax[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.StandardPriorityMap by main.scala.prioritymap.PriorityMapFactory[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap by main.scala.prioritymap.PriorityMapFactory[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.WithDefault by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.Default by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.graph.RoadGrid by main.scala.geometry.Grid[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 45 Scala sources to /home/spark/spark-map-matching/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 49ae957b for Scala compiler version 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jdk1.8.0_261/jre/lib/resources.jar:/usr/lib/jdk1.8.0_261/jre/lib/rt.jar:/usr/lib/jdk1.8.0_261/jre/lib/sunrsasign.jar:/usr/lib/jdk1.8.0_261/jre/lib/jsse.jar:/usr/lib/jdk1.8.0_261/jre/lib/jce.jar:/usr/lib/jdk1.8.0_261/jre/lib/charsets.jar:/usr/lib/jdk1.8.0_261/jre/lib/jfr.jar:/usr/lib/jdk1.8.0_261/jre/classes:/home/spark/.sbt/boot/scala-2.12.10/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/spark/spark-map-matching/target/scala-2.12/classes:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sql_2.12/3.0.0/spark-sql_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalacheck/scalacheck_2.12/1.14.1/scalacheck_2.12-1.14.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/univocity/univocity-parsers/2.8.3/univocity-parsers-2.8.3.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-sketch_2.12/3.0.0/spark-sketch_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/3.0.0/spark-core_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-catalyst_2.12/3.0.0/spark-catalyst_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-tags_2.12/3.0.0/spark-tags_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-core/1.5.10/orc-core-1.5.10.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-mapreduce/1.5.10/orc-mapreduce-1.5.10.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hive/hive-storage-api/2.7.1/hive-storage-api-2.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-column/1.10.1/parquet-column-1.10.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-hadoop/1.10.1/parquet-hadoop-1.10.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/xbean/xbean-asm7-shaded/4.15/xbean-asm7-shaded-4.15.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro/1.8.2/avro-1.8.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-mapred/1.8.2/avro-mapred-1.8.2-hadoop2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill_2.12/0.9.5/chill_2.12-0.9.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/twitter/chill-java/0.9.5/chill-java-0.9.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-client/2.7.4/hadoop-client-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-launcher_2.12/3.0.0/spark-launcher_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-kvstore_2.12/3.0.0/spark-kvstore_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-common_2.12/3.0.0/spark-network-common_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-network-shuffle_2.12/3.0.0/spark-network-shuffle_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/spark/spark-unsafe_2.12/3.0.0/spark-unsafe_2.12-3.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/activation/activation/1.1.1/activation-1.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/zookeeper/zookeeper/3.4.14/zookeeper-3.4.14.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-math3/3.4.1/commons-math3-3.4.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.6/commons-text-1.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.7.5/snappy-java-1.1.7.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.7.1/lz4-java-1.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.4.4-3/zstd-jni-1.4.4-3.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/RoaringBitmap/0.7.45/RoaringBitmap-0.7.45.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-net/commons-net/3.1/commons-net-3.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/home/spark/.sbt/boot/scala-2.12.10/lib/scala-reflect.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-jackson_2.12/3.6.6/json4s-jackson_2.12-3.6.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-client/2.30/jersey-client-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-common/2.30/jersey-common-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/core/jersey-server/2.30/jersey-server-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet/2.30/jersey-container-servlet-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/containers/jersey-container-servlet-core/2.30/jersey-container-servlet-core-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/inject/jersey-hk2/2.30/jersey-hk2-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty-all/4.1.47.Final/netty-all-4.1.47.Final.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/clearspring/analytics/stream/2.9.6/stream-2.9.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-core/4.1.1/metrics-core-4.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jvm/4.1.1/metrics-jvm-4.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-json/4.1.1/metrics-json-4.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-graphite/4.1.1/metrics-graphite-4.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/dropwizard/metrics/metrics-jmx/4.1.1/metrics-jmx-4.1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.12/2.10.0/jackson-module-scala_2.12-2.10.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/oro/oro/2.0.8/oro-2.0.8.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/net/razorvine/pyrolite/4.30/pyrolite-4.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/net/sf/py4j/py4j/0.10.9/py4j-0.10.9.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-crypto/1.0.0/commons-crypto-1.0.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.12/1.1.2/scala-parser-combinators_2.12-1.1.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/janino/3.0.16/janino-3.0.16.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/janino/commons-compiler/3.0.16/commons-compiler-3.0.16.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-vector/0.15.1/arrow-vector-0.15.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/orc/orc-shims/1.5.10/orc-shims-1.5.10.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/airlift/aircompressor/0.10/aircompressor-0.10.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/threeten/threeten-extra/1.5.0/threeten-extra-1.5.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-common/1.10.1/parquet-common-1.10.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-encoding/1.10.1/parquet-encoding-1.10.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-format/2.4.0/parquet-format-2.4.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/parquet/parquet-jackson/1.10.1/parquet-jackson-1.10.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/tukaani/xz/1.5/xz-1.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro-ipc/1.8.2/avro-ipc-1.8.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/kryo-shaded/4.0.2/kryo-shaded-4.0.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/2.7.4/hadoop-common-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-hdfs/2.7.4/hadoop-hdfs-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.4/hadoop-mapreduce-client-app-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-api/2.7.4/hadoop-yarn-api-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.4/hadoop-mapreduce-client-core-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.4/hadoop-mapreduce-client-jobclient-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-annotations/2.7.4/hadoop-annotations-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-framework/2.7.1/curator-framework-2.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/16.0.1/guava-16.0.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/yetus/audience-annotations/0.5.0/audience-annotations-0.5.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/roaringbitmap/shims/0.7.45/shims-0.7.45.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.6/json4s-core_2.12-3.6.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/jersey/media/jersey-media-jaxb/2.30/jersey-media-jaxb-2.30.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.10.0/jackson-module-paranamer-2.10.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-format/0.15.1/arrow-format-0.15.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/arrow/arrow-memory/0.15.1/arrow-memory-0.15.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/flatbuffers/flatbuffers-java/1.9.0/flatbuffers-java-1.9.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/objenesis/objenesis/2.5.1/objenesis-2.5.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-io/commons-io/2.4/commons-io-2.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-sslengine/6.1.26/jetty-sslengine-6.1.26.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-auth/2.7.4/hadoop-auth-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/curator/curator-client/2.7.1/curator-client-2.7.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.4/hadoop-mapreduce-client-common-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.4/hadoop-mapreduce-client-shuffle-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-common/2.7.4/hadoop-yarn-common-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/spotbugs/spotbugs-annotations/3.1.9/spotbugs-annotations-3.1.9.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/io/netty/netty/3.10.6.Final/netty-3.10.6.Final.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.6/json4s-ast_2.12-3.6.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.6/json4s-scalap_2.12-3.6.6.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.2.5/httpclient-4.2.5.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-client/2.7.4/hadoop-yarn-client-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-common/2.7.4/hadoop-yarn-server-common-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jackson/jackson-xc/1.9.13/jackson-xc-1.9.13.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/hadoop/hadoop-yarn-server-nodemanager/2.7.4/hadoop-yarn-server-nodemanager-2.7.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/jline/jline/0.9.94/jline-0.9.94.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/inject/guice/3.0/guice-3.0.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar:/home/spark/.cache/coursier/v1/https/repo1.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 16.455049184 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Dijkstra.Syntax...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Dijkstra.Syntax[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Dijkstra.syntax by main.scala.geometry.Dijkstra.Syntax[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Dijkstra.syntax, main.scala.geometry.Dijkstra.Syntax)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Dijkstra.Syntax,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.geometry.Dijkstra.Syntax has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Dijkstra.syntax, main.scala.geometry.Dijkstra.Syntax)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.DijkstraPriorityMapTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.DijkstraPriorityMapTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.DijkstraPriorityMapTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.DijkstraPriorityMapTest,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.DijkstraPriorityMapTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.DijkstraPriorityMapTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Grid...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Grid[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.graph.RoadGrid by main.scala.geometry.Grid[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Grid, main.scala.graph.RoadGrid)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTestWithTraj. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runODQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeSpeedQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Grid,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.geometry.Grid has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Grid, main.scala.graph.RoadGrid)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from RunMapMatching...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: RunMapMatching[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(RunMapMatching,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The RunMapMatching has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.mmTrajectory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.mmTrajectory[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.mmTrajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runODQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.mmTrajectory,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.mmTrajectory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.mmTrajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.od.odQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.od.odQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.od.odQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runODQuery: Set(UsedName(genODRDD,[Default]), UsedName(thresholdQuery,[Default]), UsedName(odQuery,[Default]), UsedName(strictQuery,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.od.odQuery,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(genODRDD,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(thresholdQuery,[Default]), UsedName(odQuery,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(strictQuery,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(getNeighbors,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.od.odQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(genODRDD,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(thresholdQuery,[Default]), UsedName(odQuery,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(strictQuery,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(getNeighbors,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.od.odQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(runODQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMapBuilder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMapBuilder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMapBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap.Default. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMapBuilder,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.prioritymap.PriorityMapBuilder has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMapBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Graph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Graph[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.graph.SimpleGraph by main.scala.geometry.Graph[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.graph.RoadGraph.RouteGraph by main.scala.geometry.Graph[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Graph, main.scala.graph.SimpleGraph, main.scala.graph.RoadGraph.RouteGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Dijkstra.DijkstraOps. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Dijkstra.Syntax. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.SimpleGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph.RouteGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Dijkstra. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Graph,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.geometry.Graph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Graph, main.scala.graph.SimpleGraph, main.scala.graph.RoadGraph.RouteGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from testRangeQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: testRangeQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(testRangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(testRangeQuery,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The testRangeQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(testRangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Dijkstra.syntax...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Dijkstra.syntax[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Dijkstra.syntax)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Dijkstra.syntax,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.Dijkstra.syntax has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Dijkstra.syntax)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.mmTrajectoryS...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.mmTrajectoryS[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.mmTrajectoryS)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.preprocessing: Set(UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(startTime,[Default]), UsedName(taxiID,[Default]), UsedName(subTrajectories,[Default]), UsedName(apply,[Default]), UsedName(apply$default$3,[Default]), UsedName(mmTrajectoryS,[Default]), UsedName(toString,[Default]), UsedName(tripID,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRoadIDSpeedQuery: Set(UsedName(ne,[Default]), UsedName(subTrajectories,[Default]), UsedName(apply,[Default]), UsedName(mmTrajectoryS,[Default]), UsedName(tripID,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeSpeedQuery: Set(UsedName(ne,[Default]), UsedName(startTime,[Default]), UsedName(subTrajectories,[Default]), UsedName(apply,[Default]), UsedName(mmTrajectoryS,[Default]), UsedName(tripID,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.mmTrajectoryS,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(main;scala;geometry;mmTrajectoryS;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$4,[Default]), UsedName(##,[Default]), UsedName(startTime,[Default]), UsedName(finalize,[Default]), UsedName(taxiID,[Default]), UsedName(<init>$default$3,[Default]), UsedName(subTrajectories,[Default]), UsedName(apply,[Default]), UsedName(apply$default$3,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$3,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(mmTrajectoryS,[Default]), UsedName(copy,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(tripID,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]))) invalidates 4 classes due to The main.scala.geometry.mmTrajectoryS has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(main;scala;geometry;mmTrajectoryS;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$4,[Default]), UsedName(##,[Default]), UsedName(startTime,[Default]), UsedName(finalize,[Default]), UsedName(taxiID,[Default]), UsedName(<init>$default$3,[Default]), UsedName(subTrajectories,[Default]), UsedName(apply,[Default]), UsedName(apply$default$3,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$3,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(mmTrajectoryS,[Default]), UsedName(copy,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(tripID,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.mmTrajectoryS)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(main.scala.mapmatching.preprocessing, runRoadIDSpeedQuery, runRangeSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from runRangeSpeedQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: runRangeSpeedQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(runRangeSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(runRangeSpeedQuery,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(runRangeSpeedQuery,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The runRangeSpeedQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(runRangeSpeedQuery,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(runRangeSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Rectangle...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Rectangle[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Rectangle)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.Node. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.RTree. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Shape. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Line. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of STRPartition.STRTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineString. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeSpeedQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Point. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.STRPartitioner.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Rectangle,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.geometry.Rectangle has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Rectangle)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(STRPartition.STRPartitioner, main.scala.STRPartitioner.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.LineStringTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.LineStringTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.LineStringTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.LineStringTest,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.LineStringTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.LineStringTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from runRangeQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: runRangeQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(runRangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(runRangeQuery,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The runRangeQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(runRangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Distances...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Distances[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Distances)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Line. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineStringTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Point. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Distances,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.Distances has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Distances)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Point...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Point[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Point)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.RTree.Node: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.RTree.RTree: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.Shape: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.Line: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.graph.RoadGridTestWithTraj: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.Trajectory: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeQuery: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRTest: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.graph.RoadVertex: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.graph.RoadEdge: Set(UsedName(assignTimeStamp,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.od.odQuery: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRPartitioner: Set(UsedName(getClass,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.LineString: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.graph.RoadGridTest: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Distances. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.MapMatcher: Set(UsedName(assignTimeStamp,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.preprocessing: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.LineStringTest: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of gpsSpeed: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.Grid: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.graph.RoadGrid: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of testRangeQuery: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.geometry.Rectangle: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.STRPartitioner.STRPartitioner: Set(UsedName(getClass,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.preprocessingTest: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.rangequery.rangeQuery: Set(UsedName(t,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Point,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(assignTimeStamp,[Default]), UsedName(finalize,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(copy,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(timestamp,[Default]), UsedName(calSpeed,[Default]), UsedName(main;scala;geometry;Point;init;,[Default]))) invalidates 27 classes due to The main.scala.geometry.Point has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(assignTimeStamp,[Default]), UsedName(finalize,[Default]), UsedName(t,[Default]), UsedName(apply,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(copy,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(timestamp,[Default]), UsedName(calSpeed,[Default]), UsedName(main;scala;geometry;Point;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Point)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(main.scala.RTree.Node, main.scala.RTree.RTree, main.scala.geometry.Shape, main.scala.geometry.Line, main.scala.graph.RoadGridTestWithTraj, main.scala.geometry.Trajectory, runRangeQuery, STRPartition.STRTest, main.scala.graph.RoadVertex, main.scala.graph.RoadEdge, main.scala.od.odQuery, STRPartition.STRPartitioner, main.scala.geometry.LineString, main.scala.graph.RoadGridTest, RunMapMatching, main.scala.mapmatching.MapMatcher, main.scala.mapmatching.preprocessing, main.scala.geometry.LineStringTest, gpsSpeed, main.scala.geometry.Grid, main.scala.graph.RoadGrid, testRangeQuery, main.scala.geometry.Rectangle, main.scala.STRPartitioner.STRPartitioner, main.scala.mapmatching.preprocessingTest, main.scala.rangequery.rangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadGraph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadGraph[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTestWithTraj. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.MapMatcher: Set(UsedName(id2edge,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadGraph,ModifiedNames(changes = UsedName(id2edge,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.graph.RoadGraph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(id2edge,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching, main.scala.mapmatching.MapMatcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadGridTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadGridTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadGridTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadGridTest,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.RoadGridTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadGridTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMapFactory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMapFactory[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.StandardPriorityMap by main.scala.prioritymap.PriorityMapFactory[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap by main.scala.prioritymap.PriorityMapFactory[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.WithDefault by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.Default by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMapFactory, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap, main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: main.scala.prioritymap.PriorityMap.Default -> Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapBuilder. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMapFactory,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 6 classes due to The main.scala.prioritymap.PriorityMapFactory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMapFactory, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap, main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Grid.GridBoundary...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Grid.GridBoundary[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Grid.GridBoundary)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Grid.GridBoundary,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.Grid.GridBoundary has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Grid.GridBoundary)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from STRPartition.STRPartitioner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: STRPartition.STRPartitioner[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(STRPartition.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(STRPartition.STRPartitioner,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The STRPartition.STRPartitioner has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(STRPartition.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.LineString...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.LineString[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.LineString)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadEdge. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of testRangeQuery2: Set(UsedName(mbr,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeSpeedQuery: Set(UsedName(mbr,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineStringTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.LineString,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(mbr,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.geometry.LineString has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(mbr,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.LineString)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(testRangeQuery2, runRangeSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.rangequery.keyPartitioner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.rangequery.keyPartitioner[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.rangequery.keyPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.rangequery.keyPartitioner,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.rangequery.keyPartitioner has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.rangequery.keyPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.DijkstraPriorityMap...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.DijkstraPriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.DijkstraPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.DijkstraPriorityMap,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.DijkstraPriorityMap has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.DijkstraPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from gpsSpeed...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: gpsSpeed[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(gpsSpeed)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(gpsSpeed,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(gpsSpeed,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The gpsSpeed has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(gpsSpeed,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(gpsSpeed)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMapLike...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMapLike[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.StandardPriorityMap by main.scala.prioritymap.PriorityMapLike[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.WithDefault by main.scala.prioritymap.PriorityMapLike[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap by main.scala.prioritymap.PriorityMapLike[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.Default by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMapLike, main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap, main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: main.scala.prioritymap.PriorityMap.Default -> Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapBuilder. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap.WithDefault. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap.Default. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapBuilder. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMapLike,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]))) invalidates 5 classes due to The main.scala.prioritymap.PriorityMapLike has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMapLike, main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap, main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from testRangeQuery2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: testRangeQuery2[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(testRangeQuery2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(testRangeQuery2,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(testRangeQuery2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The testRangeQuery2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(testRangeQuery2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(testRangeQuery2)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from runRoadIDSpeedQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: runRoadIDSpeedQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(runRoadIDSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(runRoadIDSpeedQuery,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(runRoadIDSpeedQuery,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The runRoadIDSpeedQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(runRoadIDSpeedQuery,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(runRoadIDSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.subTrajectory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.subTrajectory[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.subTrajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.mapmatching.preprocessing: Set(UsedName(!=,[Default]), UsedName(subTrajectory,[Default]), UsedName(==,[Default]), UsedName(startTime,[Default]), UsedName(apply,[Default]), UsedName(speed,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeSpeedQuery: Set(UsedName(subTrajectory,[Default]), UsedName(roadEdgeID,[Default]), UsedName(ne,[Default]), UsedName(startTime,[Default]), UsedName(apply,[Default]), UsedName(speed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRoadIDSpeedQuery: Set(UsedName(subTrajectory,[Default]), UsedName(roadEdgeID,[Default]), UsedName(ne,[Default]), UsedName(apply,[Default]), UsedName(speed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.subTrajectory,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(subTrajectory,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(main;scala;geometry;subTrajectory;init;,[Default]), UsedName(unapply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(roadEdgeID,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$4,[Default]), UsedName(##,[Default]), UsedName(startTime,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(productElement,[Default]), UsedName(endTime,[Default]), UsedName(copy$default$3,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy,[Default]), UsedName(speed,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]))) invalidates 4 classes due to The main.scala.geometry.subTrajectory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(subTrajectory,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(main;scala;geometry;subTrajectory;init;,[Default]), UsedName(unapply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(roadEdgeID,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$4,[Default]), UsedName(##,[Default]), UsedName(startTime,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(productElement,[Default]), UsedName(endTime,[Default]), UsedName(copy$default$3,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(copy,[Default]), UsedName(speed,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.subTrajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(main.scala.mapmatching.preprocessing, runRangeSpeedQuery, runRoadIDSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMap.WithDefault...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMap.WithDefault[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMap.WithDefault)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMap.WithDefault,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.prioritymap.PriorityMap.WithDefault has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMap.WithDefault)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadGridTestWithTraj...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadGridTestWithTraj[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadGridTestWithTraj)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadGridTestWithTraj,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.RoadGridTestWithTraj has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadGridTestWithTraj)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Dijkstra.DijkstraOps...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Dijkstra.DijkstraOps[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Dijkstra.DijkstraOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Dijkstra.DijkstraOps,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.Dijkstra.DijkstraOps has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Dijkstra.DijkstraOps)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.StandardPriorityMap...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.StandardPriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.StandardPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.StandardPriorityMap,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.prioritymap.StandardPriorityMap has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.StandardPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.mapmatching.preprocessingTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.mapmatching.preprocessingTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.mapmatching.preprocessingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.mapmatching.preprocessingTest,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.mapmatching.preprocessingTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.mapmatching.preprocessingTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadGrid...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadGrid[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadGrid)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTestWithTraj. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runODQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeSpeedQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadGrid,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.graph.RoadGrid has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadGrid)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.mapmatching.preprocessing...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.mapmatching.preprocessing[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.mapmatching.preprocessing)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeQuery: Set(UsedName(readQueryFile,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runODQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of testRangeQuery2: Set(UsedName(readQueryFile,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRangeSpeedQuery: Set(UsedName(readQueryFile,[Default]), UsedName(readMMWithRoadTime,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of runRoadIDSpeedQuery: Set(UsedName(readMMWithSpeed,[Default]), UsedName(readRoadIDQueryFile,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.mapmatching.preprocessing,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(readQueryFile,[Default]), UsedName(finalize,[Default]), UsedName(readMMWithSpeed,[Default]), UsedName(readMMWithRoadTime,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(readRoadIDQueryFile,[Default]))) invalidates 6 classes due to The main.scala.mapmatching.preprocessing has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(readQueryFile,[Default]), UsedName(finalize,[Default]), UsedName(readMMWithSpeed,[Default]), UsedName(readMMWithRoadTime,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(readRoadIDQueryFile,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.mapmatching.preprocessing)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(runRangeQuery, RunMapMatching, testRangeQuery2, runRangeSpeedQuery, runRoadIDSpeedQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.rangequery.rangeQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.rangequery.rangeQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.rangequery.rangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.rangequery.rangeQuery,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.rangequery.rangeQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.rangequery.rangeQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Trajectory...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Trajectory[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Trajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Rectangle. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.STRPartitioner.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Trajectory,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 3 classes due to The main.scala.geometry.Trajectory has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Trajectory)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching, main.scala.STRPartitioner.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from STRPartition.STRTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: STRPartition.STRTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(STRPartition.STRTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(STRPartition.STRTest,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The STRPartition.STRTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(STRPartition.STRTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadGraph.RouteGraph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadGraph.RouteGraph[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadGraph.RouteGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadGraph.RouteGraph,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.RoadGraph.RouteGraph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadGraph.RouteGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMap.Default...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMap.Default[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: main.scala.prioritymap.PriorityMap.Default -> Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMap.Default,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.prioritymap.PriorityMap.Default has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.PriorityMap.Default)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Line...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Line[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Line)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of STRPartition.STRTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadEdge. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineString. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineStringTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Rectangle. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Line,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.geometry.Line has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Line)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(STRPartition.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadEdge...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadEdge[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadEdge)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTestWithTraj. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeSpeedQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadEdge,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.graph.RoadEdge has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadEdge)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.RoadVertex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.RoadVertex[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.RoadVertex)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runODQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.RoadVertex,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.RoadVertex has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.RoadVertex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.STRPartitioner.STRPartitioner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.STRPartitioner.STRPartitioner[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.STRPartitioner.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.STRPartitioner.STRPartitioner,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.STRPartitioner.STRPartitioner has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.STRPartitioner.STRPartitioner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Grid.GridId...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Grid.GridId[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Grid.GridId)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Grid.GridId,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.geometry.Grid.GridId has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Grid.GridId)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from runODQuery...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: runODQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(runODQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(runODQuery,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(runODQuery,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The runODQuery has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(delayedInit,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(runODQuery,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(runODQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.Util...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.Util[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.Util)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Dijkstra. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.Util,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.Util has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.Util)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.RTree.Node...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.RTree.Node[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.RTree.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.RTree.Node,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.RTree.Node has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.RTree.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Dijkstra...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Dijkstra[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.DijkstraPriorityMap by main.scala.geometry.Dijkstra[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Dijkstra, main.scala.geometry.DijkstraPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Dijkstra,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.geometry.Dijkstra has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Dijkstra, main.scala.geometry.DijkstraPriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.prioritymap.PriorityMap...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.StandardPriorityMap by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.WithDefault by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.prioritymap.PriorityMap.Default by main.scala.prioritymap.PriorityMap[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap.Default, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: main.scala.prioritymap.PriorityMap.Default -> Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapBuilder. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapLike. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.StandardPriorityMap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.prioritymap.PriorityMapFactory.PriorityMapCanBuildFrom. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.prioritymap.PriorityMap,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 5 classes due to The main.scala.prioritymap.PriorityMap has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.prioritymap.StandardPriorityMap, main.scala.prioritymap.PriorityMap.Default, main.scala.prioritymap.PriorityMap.WithDefault, main.scala.prioritymap.PriorityMap)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(main.scala.prioritymap.PriorityMapLike)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.graph.SimpleGraph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.graph.SimpleGraph[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.graph.SimpleGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.DijkstraPriorityMapTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.graph.SimpleGraph,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.graph.SimpleGraph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.graph.SimpleGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.geometry.Shape...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.geometry.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Rectangle by main.scala.geometry.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main.scala.geometry.Point by main.scala.geometry.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.geometry.Shape, main.scala.geometry.Rectangle, main.scala.geometry.Point)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.Node. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.RTree. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Point. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Rectangle. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.Node. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.RTree. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Shape. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Line. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of STRPartition.STRTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineString. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery2. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeSpeedQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Point. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.STRPartitioner.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.Node. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.RTree.RTree. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Shape. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Line. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTestWithTraj. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Trajectory. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of STRPartition.STRTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadVertex. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadEdge. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.od.odQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of STRPartition.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineString. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGridTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Distances. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.MapMatcher. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.LineStringTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of gpsSpeed. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Grid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.graph.RoadGrid. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of testRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.geometry.Rectangle. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of main.scala.STRPartitioner.STRPartitioner: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.geometry.Shape,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 6 classes due to The main.scala.geometry.Shape has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.geometry.Shape, main.scala.geometry.Rectangle, main.scala.geometry.Point)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(STRPartition.STRPartitioner, main.scala.STRPartitioner.STRPartitioner, RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.mapmatching.MapMatcher...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.mapmatching.MapMatcher[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.mapmatching.MapMatcher)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of RunMapMatching: Set(UsedName(getClass,[Default]), UsedName(apply,[Default]), UsedName(genRoadSeg,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.mapmatching.MapMatcher,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(connectRoadsAndCalSpeed,[Default]), UsedName(genRoadSeg,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The main.scala.mapmatching.MapMatcher has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(connectRoadsAndCalSpeed,[Default]), UsedName(genRoadSeg,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.mapmatching.MapMatcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(RunMapMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from main.scala.RTree.RTree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: main.scala.RTree.RTree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(main.scala.RTree.RTree)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessingTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.mapmatching.preprocessing. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of runRangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of main.scala.rangequery.rangeQuery. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(main.scala.RTree.RTree,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]))) invalidates 1 classes due to The main.scala.RTree.RTree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(main.scala.RTree.RTree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
